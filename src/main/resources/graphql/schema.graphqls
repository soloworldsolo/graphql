type Gadget{
    id:ID!
    cost:Float
    country:String
    name:String
    versions:[Version]

}

type UserDetail {
    id:ID!
    email:String ,
    password:String
}

input GadgetInput{
    cost:Float
    country:String
    name:String
}

input UserInput {
    email:String ,
    password:String
}

type Version{
    id:ID!
    versionId:String
    gadgetId:Int
    releaseDate:Date
}

input VersionInput {
  versionId:String
  gadgetId:Int
  releaseDate:Date
}
type Query {
    getGadgets: [Gadget],
    gadgetbyId(id: ID!): Gadget

}

type Mutation {
    addGadget(gadget:GadgetInput): Gadget,
    addVersion(version:VersionInput): Version
    addUser(user:UserInput): UserDetail

}

scalar Date










